# Deployment Configuration Templates
# Copy the relevant section to your main CI/CD pipeline

# Netlify Deployment
netlify-deploy:
  name: Deploy to Netlify
  runs-on: ubuntu-latest
  needs: build
  
  steps:
  - name: Download build artifacts
    uses: actions/download-artifact@v4
    with:
      name: build-files
      path: dist/
      
  - name: Deploy to Netlify
    uses: nwtgck/actions-netlify@v2.0
    with:
      publish-dir: './dist'
      production-branch: main
      github-token: ${{ secrets.GITHUB_TOKEN }}
      deploy-message: "Deploy from GitHub Actions"
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

# Vercel Deployment
vercel-deploy:
  name: Deploy to Vercel
  runs-on: ubuntu-latest
  needs: build
  
  steps:
  - name: Download build artifacts
    uses: actions/download-artifact@v4
    with:
      name: build-files
      path: dist/
      
  - name: Deploy to Vercel
    uses: amondnet/vercel-action@v25
    with:
      vercel-token: ${{ secrets.VERCEL_TOKEN }}
      vercel-org-id: ${{ secrets.ORG_ID }}
      vercel-project-id: ${{ secrets.PROJECT_ID }}
      working-directory: ./

# AWS S3 Deployment
aws-s3-deploy:
  name: Deploy to AWS S3
  runs-on: ubuntu-latest
  needs: build
  
  steps:
  - name: Download build artifacts
    uses: actions/download-artifact@v4
    with:
      name: build-files
      path: dist/
      
  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v4
    with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: us-east-1
      
  - name: Deploy to S3
    run: |
      aws s3 sync dist/ s3://${{ secrets.S3_BUCKET }} --delete
      
  - name: Invalidate CloudFront
    run: |
      aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
    continue-on-error: true

# GitHub Pages Deployment
github-pages-deploy:
  name: Deploy to GitHub Pages
  runs-on: ubuntu-latest
  needs: build
  permissions:
    contents: read
    pages: write
    id-token: write
    
  steps:
  - name: Download build artifacts
    uses: actions/download-artifact@v4
    with:
      name: build-files
      path: dist/
      
  - name: Setup Pages
    uses: actions/configure-pages@v4
      
  - name: Upload artifact
    uses: actions/upload-pages-artifact@v3
    with:
      path: dist/
      
  - name: Deploy to GitHub Pages
    id: deployment
    uses: actions/deploy-pages@v4

# Docker Deployment
docker-deploy:
  name: Deploy with Docker
  runs-on: ubuntu-latest
  needs: build
  
  steps:
  - name: Download build artifacts
    uses: actions/download-artifact@v4
    with:
      name: build-files
      path: dist/
      
  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v3
      
  - name: Login to Docker Hub
    uses: docker/login-action@v3
    with:
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_PASSWORD }}
      
  - name: Build and push Docker image
    uses: docker/build-push-action@v5
    with:
      context: .
      push: true
      tags: ${{ secrets.DOCKER_USERNAME }}/eyewebsite:latest
      cache-from: type=gha
      cache-to: type=gha,mode=max 